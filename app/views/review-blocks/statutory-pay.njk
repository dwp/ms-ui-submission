<h2 class="govuk-heading-m govuk-!-padding-top-6">{{ t('check-your-answers:statPayHeading') }}</h2>

{% set statRows = [] %}

{% if journeyData.employed.other === 'no' or journeyData.employed.employed === 'no' %}
    {% set sspRow = {
        key: { text: t('check-your-answers:ssp') },
        value: { text: t('statutory-pay:statutoryPay.' + journeyData['statutory-pay'].statutoryPay) },
        actions: {
            items: [{
                attributes: { 'id': 'statutory-pay' },
                href: "statutory-pay?edit",
                text: t('check-your-answers:change'),
                visuallyHiddenText: t('check-your-answers:visuallyHiddenTextSsp')
            }]
        }
    } %}
    {{ (statRows.push(sspRow), null) }}
{% endif %}

{% if journeyData['statutory-sick-pay-recent'].sspRecent | length %}
    {% set sspRecentRow = {
        key: { text: t('check-your-answers:sspRecent') },
        value: { text: t('ssp-recent:sspRecent.' + journeyData['statutory-sick-pay-recent'].sspRecent) },
        actions: {
            items: [{
                attributes: { 'id': 'statutory-sick-pay-recent' },
                href: "statutory-sick-pay-recent?edit",
                text: t('check-your-answers:change'),
                visuallyHiddenText: t('check-your-answers:visuallyHiddenTextSspRecent')
            }]
        }
    } %}
    {{ (statRows.push(sspRecentRow), null) }}
{% endif %}

{% if journeyData.employed.other === 'no' or journeyData.employed.employed === 'no' %}
    {% if (journeyData['statutory-pay'].statutoryPay === 'yes' or (journeyData['statutory-pay'].statutoryPay === 'no' and journeyData['statutory-sick-pay-recent'].sspRecent === 'yes')) %}
        {% set sspEndRow = {
            key: { text: t('check-your-answers:sspEnd') },
            value: { text: journeyData['statutory-sick-pay-end'].sspEndDate | date(htmlLang) },
            actions: {
                items: [{
                    attributes: { 'id': 'statutory-sick-pay-end' },
                    href: "statutory-sick-pay-end?edit",
                    text: t('check-your-answers:change'),
                    visuallyHiddenText: t('check-your-answers:visuallyHiddenTextSspEnd')
                }]
            }
        } %}
        {{ (statRows.push(sspEndRow), null) }}
    {% endif %}
{% endif %}

{% set otherStatRow = {
    key: { text: t('check-your-answers:otherStatPay') },
    value: { text: t('check-your-answers:none') if journeyData['statutory-pay-other'].statutoryPayOther === 'none' else t('statutory-pay-other:statutoryPayOther.' + journeyData['statutory-pay-other'].statutoryPayOther) },
    actions: {
        items: [{
            attributes: { 'id': 'statutory-pay-other' },
            href: "statutory-pay-other?edit",
            text: t('check-your-answers:change'),
            visuallyHiddenText: t('check-your-answers:visuallyHiddenTextOtherStatPay')
        }]
    }
} %}
{{ (statRows.push(otherStatRow), null) }}

{% set universalCreditRow = {
    key: { text: t('check-your-answers:universalCredit') },
    value: { text: t('universal-credit:universalCredit.' + journeyData['universal-credit'].universalCredit) },
    actions: {
        items: [{
            attributes: { 'id': 'universal-credit' },
            href: "universal-credit?edit",
            text: t('check-your-answers:change'),
            visuallyHiddenText: t('check-your-answers:visuallyHiddenTextUniversalCredit')
        }]
    }
} %}
{{ (statRows.push(universalCreditRow), null) }}

{% if journeyData['statutory-pay'].statutoryPay === 'no' %}
    {% set sspReasonNoRow = {
        key: { text: t('check-your-answers:sspReasonNo') },
        value: { text: t('reason-no-sick-pay:' + journeyData['reason-no-sick-pay'].statutoryPayNoReason) },
        actions: {
            items: [{
                attributes: { 'id': 'reason-no-sick-pay' },
                href: "reason-no-sick-pay?edit",
                text: t('check-your-answers:change'),
                visuallyHiddenText: t('check-your-answers:visuallyHiddenTextSspReasonNo')
            }]
        }
    } %}
    {{ (statRows.push(sspReasonNoRow), null) }}
{% endif %}

{{ govukSummaryList({
    rows: statRows
}) }}
